package com.example.optifi;

import android.os.Bundle;
import android.widget.TextView;
import androidx.appcompat.app.AppCompatActivity;
import java.util.ArrayList;
import java.util.List;

public class RecommendationsActivity extends AppCompatActivity {

    private TextView recommendationsText;
    private WiFiNetwork network;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_recommendations);

        network = getIntent().getParcelableExtra("network");
        if (network == null) {
            finish();
            return;
        }

        recommendationsText = findViewById(R.id.recommendationsText);
        generateRecommendations();
    }

    private void generateRecommendations() {
        List<String> recommendations = new ArrayList<>();

        // Signal strength based recommendations
        switch (network.getQuality()) {
            case POOR:
                recommendations.add("üî¥ –ö–†–ò–¢–ò–ß–ù–û: –î—É–∂–µ —Å–ª–∞–±–∫–∏–π —Å–∏–≥–Ω–∞–ª");
                recommendations.add("‚Ä¢ –ù–∞–±–ª–∏–∑—å—Ç–µ—Å—è –¥–æ —Ä–æ—É—Ç–µ—Ä–∞");
                recommendations.add("‚Ä¢ –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Wi-Fi —Ä–µ–ø—ñ—Ç–µ—Ä –∞–±–æ –º–µ—à–µ–≤—É —Å–∏—Å—Ç–µ–º—É");
                recommendations.add("‚Ä¢ –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –ø–µ—Ä–µ—à–∫–æ–¥–∏ –º—ñ–∂ –ø—Ä–∏—Å—Ç—Ä–æ—î–º —Ç–∞ —Ä–æ—É—Ç–µ—Ä–æ–º");
                // –î–æ–¥–∞—î–º–æ —Å–ø–µ—Ü–∏—Ñ—ñ—á–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è —Å–ª–∞–±–∫–æ–≥–æ —Å–∏–≥–Ω–∞–ª—É
                recommendations.add("üî¥ –†–æ–∑–º—ñ—Å—Ç—ñ—Ç—å —Ä–µ–ø—ñ—Ç–µ—Ä —É –∑–æ–Ω—ñ –∑ –Ω–∞–π–≥—ñ—Ä—à–∏–º —Å–∏–≥–Ω–∞–ª–æ–º");
                recommendations.add("üìç –û–ø—Ç–∏–º–∞–ª—å–Ω–µ –º—ñ—Å—Ü–µ: ~5 –º–µ—Ç—Ä—ñ–≤ –≤—ñ–¥ —Ä–æ—É—Ç–µ—Ä–∞");
                recommendations.add("üîµ –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å —Ä–µ–ø—ñ—Ç–µ—Ä –º—ñ–∂ —Ä–æ—É—Ç–µ—Ä–æ–º —ñ –∑–æ–Ω–æ—é –±–µ–∑ —Å–∏–≥–Ω–∞–ª—É");
                break;

            case FAIR:
                recommendations.add("üü° –£–í–ê–ì–ê: –°–ª–∞–±–∫–∏–π —Å–∏–≥–Ω–∞–ª");
                recommendations.add("‚Ä¢ –†–æ–∑–≥–ª—è–Ω—å—Ç–µ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è —Ä–µ–ø—ñ—Ç–µ—Ä–∞");
                recommendations.add("‚Ä¢ –£–Ω–∏–∫–∞–π—Ç–µ —Ç–æ–≤—Å—Ç–∏—Ö —Å—Ç—ñ–Ω —Ç–∞ –º–µ—Ç–∞–ª–µ–≤–∏—Ö –ø—Ä–µ–¥–º–µ—Ç—ñ–≤");
                break;

            case GOOD:
                recommendations.add("üü¢ –î–æ–±—Ä–∏–π —Å–∏–≥–Ω–∞–ª");
                recommendations.add("‚Ä¢ –°–∏–≥–Ω–∞–ª –¥–æ—Å—Ç–∞—Ç–Ω—ñ–π –¥–ª—è –±—ñ–ª—å—à–æ—Å—Ç—ñ –∑–∞–≤–¥–∞–Ω—å");
                break;

            case EXCELLENT:
                recommendations.add("üü¢ –í—ñ–¥–º—ñ–Ω–Ω–∏–π —Å–∏–≥–Ω–∞–ª!");
                recommendations.add("‚Ä¢ –û–ø—Ç–∏–º–∞–ª—å–Ω–µ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –¥–ª—è —Ü—ñ—î—ó –º–µ—Ä–µ–∂—ñ");
                break;
        }

        // Frequency band recommendations
        if (network.getFrequencyBand().equals("2.4GHz")) {
            recommendations.add("\nüì° –ß–∞—Å—Ç–æ—Ç–Ω–∏–π –¥—ñ–∞–ø–∞–∑–æ–Ω 2.4GHz:");
            recommendations.add("‚Ä¢ –ë—ñ–ª—å—à–∏–π —Ä–∞–¥—ñ—É—Å –¥—ñ—ó, –∞–ª–µ –º–µ–Ω—à–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å");
            recommendations.add("‚Ä¢ –ú–æ–∂–µ –º–∞—Ç–∏ –∑–∞–≤–∞–¥–∏ –≤—ñ–¥ —ñ–Ω—à–∏—Ö –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤");
            recommendations.add("‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –¥–ª—è IoT –ø—Ä–∏—Å—Ç—Ä–æ—ó–≤");
        } else {
            recommendations.add("\nüì° –ß–∞—Å—Ç–æ—Ç–Ω–∏–π –¥—ñ–∞–ø–∞–∑–æ–Ω 5GHz:");
            recommendations.add("‚Ä¢ –í–∏—â–∞ —à–≤–∏–¥–∫—ñ—Å—Ç—å, –º–µ–Ω—à–µ –∑–∞–≤–∞–¥");
            recommendations.add("‚Ä¢ –ú–µ–Ω—à–∏–π —Ä–∞–¥—ñ—É—Å –¥—ñ—ó");
            recommendations.add("‚Ä¢ –Ü–¥–µ–∞–ª—å–Ω–æ –¥–ª—è –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ –≤—ñ–¥–µ–æ —Ç–∞ —ñ–≥–æ—Ä");
        }

        // Security recommendations
        if (network.getCapabilities().contains("WEP")) {
            recommendations.add("\nüîí –ë–ï–ó–ü–ï–ö–ê: –ó–∞—Å—Ç–∞—Ä—ñ–ª–∏–π –ø—Ä–æ—Ç–æ–∫–æ–ª WEP");
            recommendations.add("‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –æ–Ω–æ–≤–∏—Ç–∏ –¥–æ WPA2/WPA3");
        } else if (network.getCapabilities().contains("WPA")) {
            recommendations.add("\nüîí –ë–µ–∑–ø–µ–∫–∞: –°—É—á–∞—Å–Ω–µ —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è");
        }

        // General optimization tips
        recommendations.add("\nüí° –ó–∞–≥–∞–ª—å–Ω—ñ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:");
        recommendations.add("‚Ä¢ –†–æ–∑–º—ñ—Å—Ç—ñ—Ç—å —Ä–æ—É—Ç–µ—Ä –Ω–∞ –≤–∏—Å–æ—Ç—ñ 1-2 –º–µ—Ç—Ä–∏");
        recommendations.add("‚Ä¢ –£–Ω–∏–∫–∞–π—Ç–µ –∑–∞–∫—Ä–∏—Ç–∏—Ö —à–∞—Ñ —Ç–∞ –Ω—ñ—à");
        recommendations.add("‚Ä¢ –†–µ–≥—É–ª—è—Ä–Ω–æ –æ–Ω–æ–≤–ª—é–π—Ç–µ –ø—Ä–æ—à–∏–≤–∫—É —Ä–æ—É—Ç–µ—Ä–∞");
        recommendations.add("‚Ä¢ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –º–µ–Ω—à –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω—ñ –∫–∞–Ω–∞–ª–∏");

        StringBuilder fullText = new StringBuilder();
        for (String recommendation : recommendations) {
            fullText.append(recommendation).append("\n");
        }

        recommendationsText.setText(fullText.toString());
    }
}